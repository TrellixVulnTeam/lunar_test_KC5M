{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout/flex\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/chips\";\nimport * as i6 from \"@angular/common\";\n\nfunction UploadEntryComponent_mat_chip_29_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadEntryComponent_mat_chip_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 19);\n    i0.ɵɵlistener(\"removed\", function UploadEntryComponent_mat_chip_29_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const fruit_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.remove(fruit_r5);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, UploadEntryComponent_mat_chip_29_button_2_Template, 3, 0, \"button\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fruit_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selectable\", ctx_r1.selectable)(\"removable\", ctx_r1.removable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r5, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.removable);\n  }\n}\n\nfunction UploadEntryComponent_mat_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fruit_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", fruit_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", fruit_r9, \" \");\n  }\n}\n\nexport class UploadEntryComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n\nUploadEntryComponent.ɵfac = function UploadEntryComponent_Factory(t) {\n  return new (t || UploadEntryComponent)();\n};\n\nUploadEntryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadEntryComponent,\n  selectors: [[\"app-upload-entry\"]],\n  decls: 36,\n  vars: 8,\n  consts: [[\"fxLayout\", \"\", 1, \"container-entry\"], [\"fxFlex\", \"100%\", 1, \"profile-container\"], [\"fxFlex\", \"100%\", 1, \"entry-label\"], [\"size\", \"2\", \"width\", \"100%\", \"color\", \"#D4CCCB\"], [1, \"entry-label\"], [\"fxLayout\", \"\"], [\"appearance\", \"fill\", 1, \"form-entry\"], [\"matInput\", \"\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"rows\", \"7\"], [\"appearance\", \"fill\", 1, \"example-chip-list\"], [\"aria-label\", \"Fruit selection\"], [\"chipList\", \"\"], [3, \"selectable\", \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New fruit...\", 3, \"formControl\", \"matAutocomplete\", \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputTokenEnd\"], [\"fruitInput\", \"\"], [3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"selectable\", \"removable\", \"removed\"], [\"matChipRemove\", \"\", 4, \"ngIf\"], [\"matChipRemove\", \"\"], [3, \"value\"]],\n  template: function UploadEntryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelement(3, \"hr\", 3);\n      i0.ɵɵelementStart(4, \"p\", 4);\n      i0.ɵɵelementStart(5, \"b\");\n      i0.ɵɵtext(6, \"New Entry\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelementStart(8, \"mat-form-field\", 6);\n      i0.ɵɵelementStart(9, \"mat-label\");\n      i0.ɵɵelementStart(10, \"mat-icon\");\n      i0.ɵɵtext(11, \"dark_mode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(12, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 7);\n      i0.ɵɵelementStart(14, \"mat-icon\", 8);\n      i0.ɵɵtext(15, \"edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 5);\n      i0.ɵɵelementStart(17, \"mat-form-field\", 6);\n      i0.ɵɵelementStart(18, \"mat-label\");\n      i0.ɵɵelementStart(19, \"mat-icon\");\n      i0.ɵɵtext(20, \"description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"textarea\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 5);\n      i0.ɵɵelementStart(24, \"mat-form-field\", 10);\n      i0.ɵɵelementStart(25, \"mat-label\");\n      i0.ɵɵtext(26, \"Favorite Fruits\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-chip-list\", 11, 12);\n      i0.ɵɵtemplate(29, UploadEntryComponent_mat_chip_29_Template, 3, 4, \"mat-chip\", 13);\n      i0.ɵɵelementStart(30, \"input\", 14, 15);\n      i0.ɵɵlistener(\"matChipInputTokenEnd\", function UploadEntryComponent_Template_input_matChipInputTokenEnd_30_listener($event) {\n        return ctx.add($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"mat-autocomplete\", 16, 17);\n      i0.ɵɵlistener(\"optionSelected\", function UploadEntryComponent_Template_mat_autocomplete_optionSelected_32_listener($event) {\n        return ctx.selected($event);\n      });\n      i0.ɵɵtemplate(34, UploadEntryComponent_mat_option_34_Template, 2, 2, \"mat-option\", 18);\n      i0.ɵɵpipe(35, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(28);\n\n      const _r3 = i0.ɵɵreference(33);\n\n      i0.ɵɵadvance(29);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fruits);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formControl\", ctx.fruitCtrl)(\"matAutocomplete\", _r3)(\"matChipInputFor\", _r0)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(35, 6, ctx.filteredFruits));\n    }\n  },\n  directives: [i1.DefaultLayoutDirective, i1.DefaultFlexDirective, i2.MatFormField, i2.MatLabel, i3.MatIcon, i4.MatInput, i2.MatSuffix, i5.MatChipList, i6.NgForOf, i5.MatChipInput, i5.MatChip, i6.NgIf, i5.MatChipRemove],\n  pipes: [i6.AsyncPipe],\n  styles: [\".entry-label[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: -20px;\\n}\\n\\n.container-entry[_ngcontent-%COMP%] {\\n  padding-top: 20px;\\n}\\n\\n.form-entry[_ngcontent-%COMP%] {\\n  margin: auto;\\n  width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwbG9hZC1lbnRyeS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFBO0VBQ0EsaUJBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxZQUFBO0VBQ0EsVUFBQTtBQUVKIiwiZmlsZSI6InVwbG9hZC1lbnRyeS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lbnRyeS1sYWJlbHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi10b3A6IC0yMHB4O1xyXG59XHJcblxyXG4uY29udGFpbmVyLWVudHJ5e1xyXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbn1cclxuLmZvcm0tZW50cnl7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB3aWR0aDogOTAlO1xyXG59Il19 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\gerar\\OneDrive\\Documentos\\Projects\\Angular\\lunar-front-end\\src\\app\\components\\shared\\upload-entry\\upload-entry.component.ts","C:\\Users\\gerar\\OneDrive\\Documentos\\Projects\\Angular\\lunar-front-end\\src\\app\\components\\shared\\upload-entry\\upload-entry.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upload-entry',\n  templateUrl: './upload-entry.component.html',\n  styleUrls: ['./upload-entry.component.scss']\n})\nexport class UploadEntryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-entry\" fxLayout>\n    <div class=\"profile-container\" fxFlex=\"100%\">\n        <div fxFlex=\"100%\" class=\"entry-label\">\n            <hr size=\"2\" width=\"100%\" color=\"#D4CCCB\">\n            <p class=\"entry-label\"><b>New Entry</b></p>\n        </div>\n    </div>    \n</div>\n<div fxLayout>\n        <mat-form-field appearance=\"fill\" class=\"form-entry\">\n          <mat-label><mat-icon>dark_mode</mat-icon>Title</mat-label>\n          <input matInput>\n          <mat-icon matSuffix>edit</mat-icon>\n        </mat-form-field> \n</div>\n<div fxLayout>\n    <mat-form-field appearance=\"fill\" class=\"form-entry\">\n        <mat-label><mat-icon>description</mat-icon>Description</mat-label>\n        <textarea matInput rows=\"7\"></textarea>\n      </mat-form-field>\n</div>\n<div fxLayout>\n    <mat-form-field class=\"example-chip-list\" appearance=\"fill\">\n        <mat-label>Favorite Fruits</mat-label>\n        <mat-chip-list #chipList aria-label=\"Fruit selection\">\n          <mat-chip\n            *ngFor=\"let fruit of fruits\"\n            [selectable]=\"selectable\"\n            [removable]=\"removable\"\n            (removed)=\"remove(fruit)\">\n            {{fruit}}\n            <button matChipRemove *ngIf=\"removable\">\n              <mat-icon>cancel</mat-icon>\n            </button>\n          </mat-chip>\n          <input\n            placeholder=\"New fruit...\"\n            #fruitInput\n            [formControl]=\"fruitCtrl\"\n            [matAutocomplete]=\"auto\"\n            [matChipInputFor]=\"chipList\"\n            [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n            (matChipInputTokenEnd)=\"add($event)\">\n        </mat-chip-list>\n        <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n          <mat-option *ngFor=\"let fruit of filteredFruits | async\" [value]=\"fruit\">\n            {{fruit}}\n          </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}