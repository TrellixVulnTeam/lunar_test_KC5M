{"ast":null,"code":"import { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout/flex\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/chips\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/core\";\n\nfunction UploadEntryComponent_mat_chip_32_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction UploadEntryComponent_mat_chip_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-chip\", 18);\n    i0.ɵɵlistener(\"removed\", function UploadEntryComponent_mat_chip_32_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const tag_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.remove(tag_r3);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, UploadEntryComponent_mat_chip_32_button_2_Template, 3, 0, \"button\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tag_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selectable\", ctx_r1.selectable)(\"removable\", ctx_r1.removable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r3.name, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.removable);\n  }\n}\n\nfunction UploadEntryComponent_mat_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sec_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", sec_r7.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", sec_r7.viewValue, \" \");\n  }\n}\n\nexport let UploadEntryComponent = /*#__PURE__*/(() => {\n  class UploadEntryComponent {\n    constructor() {\n      this.selectable = true;\n      this.removable = true;\n      this.addOnBlur = true;\n      this.separatorKeysCodes = [ENTER, COMMA];\n      this.tags = [{\n        name: 'Deep Space'\n      }, {\n        name: 'Temperature'\n      }];\n      this.secs = [{\n        value: 'public',\n        viewValue: 'Public'\n      }, {\n        value: 'private',\n        viewValue: 'Private'\n      }];\n    }\n\n    add(event) {\n      const value = (event.value || '').trim(); // Add our fruit\n\n      if (value) {\n        this.tags.push({\n          name: value\n        });\n      } // Clear the input value\n\n\n      event.chipInput.clear();\n    }\n\n    remove(tag) {\n      const index = this.tags.indexOf(tag);\n\n      if (index >= 0) {\n        this.tags.splice(index, 1);\n      }\n    }\n\n  }\n\n  UploadEntryComponent.ɵfac = function UploadEntryComponent_Factory(t) {\n    return new (t || UploadEntryComponent)();\n  };\n\n  UploadEntryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadEntryComponent,\n    selectors: [[\"app-upload-entry\"]],\n    decls: 45,\n    vars: 5,\n    consts: [[\"fxLayout\", \"\", 1, \"container-entry\"], [\"fxFlex\", \"100%\", 1, \"profile-container\"], [\"fxFlex\", \"100%\", 1, \"entry-label\"], [\"size\", \"2\", \"width\", \"100%\", \"color\", \"#D4CCCB\"], [1, \"entry-label\"], [1, \"form-container\"], [\"fxLayout\", \"\"], [\"appearance\", \"fill\", 1, \"form-entry\"], [\"matInput\", \"\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"rows\", \"5\"], [\"aria-label\", \"Tag selection\"], [\"chipList\", \"\"], [3, \"selectable\", \"removable\", \"removed\", 4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"New tag...\", 3, \"matChipInputFor\", \"matChipInputSeparatorKeyCodes\", \"matChipInputAddOnBlur\", \"matChipInputTokenEnd\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayout\", \"\", 1, \"btn-container\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"publis-btn\"], [3, \"selectable\", \"removable\", \"removed\"], [\"matChipRemove\", \"\", 4, \"ngIf\"], [\"matChipRemove\", \"\"], [3, \"value\"]],\n    template: function UploadEntryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"hr\", 3);\n        i0.ɵɵelementStart(4, \"p\", 4);\n        i0.ɵɵelementStart(5, \"b\");\n        i0.ɵɵtext(6, \"New Entry\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(10, \"mat-label\");\n        i0.ɵɵelementStart(11, \"mat-icon\");\n        i0.ɵɵtext(12, \"dark_mode\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementStart(15, \"mat-icon\", 9);\n        i0.ɵɵtext(16, \"edit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 6);\n        i0.ɵɵelementStart(18, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(19, \"mat-label\");\n        i0.ɵɵelementStart(20, \"mat-icon\");\n        i0.ɵɵtext(21, \"description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"textarea\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 6);\n        i0.ɵɵelementStart(25, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(26, \"mat-label\");\n        i0.ɵɵelementStart(27, \"mat-icon\");\n        i0.ɵɵtext(28, \"label\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(29, \"Tags\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-chip-list\", 11, 12);\n        i0.ɵɵtemplate(32, UploadEntryComponent_mat_chip_32_Template, 3, 4, \"mat-chip\", 13);\n        i0.ɵɵelementStart(33, \"input\", 14);\n        i0.ɵɵlistener(\"matChipInputTokenEnd\", function UploadEntryComponent_Template_input_matChipInputTokenEnd_33_listener($event) {\n          return ctx.add($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 6);\n        i0.ɵɵelementStart(35, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(36, \"mat-label\");\n        i0.ɵɵelementStart(37, \"mat-icon\");\n        i0.ɵɵtext(38, \"shield\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(39, \"Share with\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"mat-select\");\n        i0.ɵɵtemplate(41, UploadEntryComponent_mat_option_41_Template, 2, 2, \"mat-option\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 16);\n        i0.ɵɵelementStart(43, \"button\", 17);\n        i0.ɵɵtext(44, \"Publish\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(31);\n\n        i0.ɵɵadvance(32);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tags);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matChipInputFor\", _r0)(\"matChipInputSeparatorKeyCodes\", ctx.separatorKeysCodes)(\"matChipInputAddOnBlur\", ctx.addOnBlur);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.secs);\n      }\n    },\n    directives: [i1.DefaultLayoutDirective, i1.DefaultFlexDirective, i2.MatFormField, i2.MatLabel, i3.MatIcon, i4.MatInput, i2.MatSuffix, i5.MatChipList, i6.NgForOf, i5.MatChipInput, i7.MatSelect, i8.MatButton, i5.MatChip, i6.NgIf, i5.MatChipRemove, i9.MatOption],\n    styles: [\".entry-label[_ngcontent-%COMP%]{text-align:center;margin-top:-20px}.container-entry[_ngcontent-%COMP%]{padding-top:20px}.form-entry[_ngcontent-%COMP%]{margin:auto;width:90%}.publis-btn[_ngcontent-%COMP%]{margin:auto}.btn-container[_ngcontent-%COMP%]{padding:5px}\"]\n  });\n  return UploadEntryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}